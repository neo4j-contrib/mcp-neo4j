# Docker Compose for MCP Compliance Testing
# This configuration provides comprehensive MCP protocol compliance testing

services:
  # Neo4j database for testing
  neo4j-test:
    image: neo4j:latest
    container_name: mcp-compliance-neo4j
    environment:
      - NEO4J_AUTH=neo4j/testpassword
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_compliance_data:/data
      - neo4j_compliance_logs:/logs
    networks:
      - mcp-compliance-network
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "testpassword", "RETURN 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  # SSE Server for MCP compliance testing
  mcp-sse-server:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      target: sse
    container_name: mcp-compliance-sse-server
    environment:
      - NEO4J_URL=bolt://neo4j-test:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=testpassword
      - NEO4J_DATABASE=neo4j
      - MCP_MODE=sse
      - MCP_SERVER_PORT=3001
      - MCP_SERVER_HOST=0.0.0.0
    ports:
      - "3001:3001"
    depends_on:
      neo4j-test:
        condition: service_healthy
    networks:
      - mcp-compliance-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 10s
      timeout: 5s
      retries: 8
      start_period: 20s

  # HTTP Server for cross-protocol testing
  # REMOVED - HTTP protocol implementation removed from project

  # MCP Inspector (for visual testing)
  mcp-inspector:
    image: modelcontextprotocol/inspector:latest
    container_name: mcp-compliance-inspector
    ports:
      - "3010:3010"
    environment:
      - MCP_SERVER_URL=http://mcp-sse-server:3001/sse
    depends_on:
      mcp-sse-server:
        condition: service_healthy
    networks:
      - mcp-compliance-network

  # Comprehensive MCP Compliance Test Suite
  mcp-compliance-suite:
    build:
      context: ..
      dockerfile: docker/Dockerfile_test
    container_name: mcp-compliance-test-suite
    environment:
      - NEO4J_URI=neo4j://neo4j-test:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=testpassword
      - NEO4J_DATABASE=neo4j
      - MCP_SSE_SERVER_URL=http://mcp-sse-server:3001
    depends_on:
      neo4j-test:
        condition: service_healthy
      mcp-sse-server:
        condition: service_healthy
    networks:
      - mcp-compliance-network
    volumes:
      - ../src:/app/src:ro
      - ../tests:/app/tests:ro
      - ../test-results:/app/test-results
    command: [
      "/wait-for-neo4j.sh",
      "python", "tests/test_mcp_compliance.py"
    ]

  # SSE Protocol Compliance Tests
  sse-protocol-tests:
    build:
      context: ..
      dockerfile: docker/Dockerfile_test
    container_name: mcp-sse-protocol-tests
    environment:
      - NEO4J_URI=neo4j://neo4j-test:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=testpassword
      - NEO4J_DATABASE=neo4j
      - MCP_SSE_SERVER_URL=http://mcp-sse-server:3001
    depends_on:
      neo4j-test:
        condition: service_healthy
      mcp-sse-server:
        condition: service_healthy
    networks:
      - mcp-compliance-network
    volumes:
      - ../src:/app/src:ro
      - ../tests:/app/tests:ro
      - ../test-results:/app/test-results
    command: [
      "/wait-for-neo4j.sh",
      "python", "-m", "pytest",
      "tests/test_sse_mcp_compliance.py",
      "-v", "--tb=line"
    ]

  # Live Integration Tests
  live-integration-tests:
    build:
      context: ..
      dockerfile: docker/Dockerfile_test
    container_name: mcp-live-integration-tests
    environment:
      - NEO4J_URI=neo4j://neo4j-test:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=testpassword
      - NEO4J_DATABASE=neo4j
      - MCP_SSE_SERVER_URL=http://mcp-sse-server:3001
    depends_on:
      neo4j-test:
        condition: service_healthy
      mcp-sse-server:
        condition: service_healthy
    networks:
      - mcp-compliance-network
    volumes:
      - ../src:/app/src:ro
      - ../tests:/app/tests:ro
      - ../test-results:/app/test-results
    command: [
      "/wait-for-neo4j.sh",
      "python", "-m", "pytest",
      "tests/test_sse_mcp_compliance.py",
      "-v", "-m", "integration",
      "--tb=line"
    ]

  # Test Results Viewer (nginx for viewing HTML reports)
  test-results-viewer:
    image: nginx:alpine
    container_name: mcp-test-results-viewer
    ports:
      - "8080:80"
    volumes:
      - ../test-results:/usr/share/nginx/html:ro
    networks:
      - mcp-compliance-network
    depends_on:
      - mcp-compliance-suite

volumes:
  neo4j_compliance_data:
  neo4j_compliance_logs:

networks:
  mcp-compliance-network:
    driver: bridge
